getstaffdetail(workspceid, siteid) - Pass
getstaffdetailbyservice(workspceid, siteid, serviceid) - Pass

getservice(workspceid, siteid) - Pass
getservicedetailbystaff(workspceid, siteid, staffid) - Pass

getbookingdetail(site,bookingid,workspaceid) - Pass

getLocationByStaffId()- (workspceid, siteid, staffid) - Pass
getLocationByServiceId()- (workspceid, siteid, serviceid) - Pass

getstaffDateDetail() filterby available- leavedetail exclude
getslotdeatail() - settings

basedon email-> create or link booking


//Sample
db.getCollection('events').find({
  workspace_ids: ObjectId("61261b5ba97d172becfc0988"), 
  site_id:ObjectId("60ec2ecc1fb0c42560fbf5d2"), 
  staff_ids:ObjectId("60f7c8e0fe41c636781746c0")
  })

# date logic should be , 3 different function , 

getDate(siteid,workspaceid,staffid,service id),
getDate(siteid,workspaceid,service id),
getDate(siteid,workspaceid,staffid) 

based on that slot would be generate

#
slot please check in setting collection  "client_time_slot" : 30,

slot you have to provide like this "booking_date":

"slot":[
{
     "no":1,
	 "start_time":"",
	 "end_time":"",
	 "available":true,
	 }
	 }

----------------------------------------------------------------

/*var currentDate = moment('2015-10-31');
var futureMonth = moment(currentDate).add(1, 'M');
var futureMonthEnd = moment(futureMonth).endOf('month');

if(currentDate.date() != futureMonth.date() && futureMonth.isSame(futureMonthEnd.format('YYYY-MM-DD'))) {
    futureMonth = futureMonth.add(1, 'd');
}

console.log(currentDate.format('DD-MM-YYYY'));
console.log(futureMonth.format('DD-MM-YYYY'));
*/




staffdetail_ag_rs[k], 
models, 
newRes, 
minutesFormat, 
 
 


displaySettings,
bookingStartDate,
clientSlot, 
minDate, 
maxDate,
pre_booking_day,
selectedDate,
dateFormat, 
args.date,

